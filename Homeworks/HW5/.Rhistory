group_by(division, year) %>%
summarise(mean_val = mean(enrollment, na.rm = TRUE))
new_df
ggplot(new_df)
ggplot(new_df, aes(x = year, y = mean_val, color = division))
# read the data
library(readr)
library(tidyverse)
read_csv_url <- function(url){
print("Read csv")
sheet <- read_csv(url)
data <- as_tibble(sheet)
return(data)
}
convert_long <- function(data, var_name){
print("converted to long")
return(data %>%
rename(area_name = Area_name) %>%
select(c(area_name, STCOU, ends_with("D"))) %>%
pivot_longer(cols = ends_with("D"), values_to = var_name, names_to = "code"))
}
add_year_measurement <- function(new_data){
return(new_data %>% mutate(year = format(as.Date(str_sub(new_data$code, start= -3) %>% str_sub(1, 2), format = "%y"), "%Y"),
measurement = substr(new_data$code, 1, 7)))
print("new variables added")
}
create_state <- function(county_data) {
# county level
county_data$state <- str_sub(county_data$area_name, start = -2)
print("county state created")
#print(county_data)
return(county_data)
}
create_division <- function(non_county_data) {
# non-county level
non_county_data$division <- NA
for (i in 1:nrow(non_county_data)){
if (tolower(non_county_data$area_name[i]) %in% c("connecticut", "maine", "massachusetts", "new hampshire", "rhode island", "Vermont")){
non_county_data$division[i] = "Division 1"
}
else if(tolower(non_county_data$area_name[i]) %in% c("new jersey", "new york", "pennsylvania")){
non_county_data$division[i] = "Division 2"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("illinois", "indiana", "michigan", "ohio", "wisconsin")){
non_county_data$division[i] = "Division 3"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("iowa", "kansas", "minnesota", "missouri", "nebraska", "north dakota", "south dakota")){
non_county_data$division[i] = "Division 4"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("delaware", "florida", "georgia", "maryland", "north carolina", "south carolina", "virginia", "washington d.c.", "west virginia")){
non_county_data$division[i] = "Division 5"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("alabama", "kentucky", "mississippi", "tennessee")){
non_county_data$division[i] = "Division 6"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("arkansas", "louisiana", "oklahoma", "texas")){
non_county_data$division[i] = "Division 7"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("arizona", "colorado", "idaho", "montana", "nevada", "new mexico", "utah", "Wyoming")){
non_county_data$division[i] = "Division 8"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("alaska", "california", "hawaii", "oregon", "washington")){
non_county_data$division[i] = "Division 9"
}
else{
non_county_data$division[i] = "ERROR"
}
}
#print(non_county_data)
return(non_county_data)
}
seggregating_data <- function(new_data){
county_data <- new_data[grep(pattern = ", \\w\\w", new_data$area_name), ]
non_county_data <- new_data[-grep(pattern = ", \\w\\w", new_data$area_name), ]
class(county_data) <- c("county", class(county_data))
county_data <- create_state(county_data)
non_county_data <- create_division(non_county_data)
class(non_county_data) <- c("state", class(non_county_data))
print(county_data)
print(non_county_data)
return(list(county_data, non_county_data))
}
main<- function(url, var_name = "enrollment"){
data = read_csv_url(url)
long_data = convert_long(data, var_name)
new_data = add_year_measurement(long_data)
seggregated_data = seggregating_data(new_data)
return(seggregated_data)
}
url1 <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv"
url2 <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv"
EDU01a_data <- main(url1, var_name = "enrollment")
EDU01a_data <- main(url2, var_name = "enrollment")
combine_func <- function(data1, data2){
combined_county_data = dplyr::bind_rows(data1[[1]], data2[[1]])
combined_non_county_data = dplyr::bind_rows(data1[[2]], data2[[2]])
return(list(combined_county_data, combined_non_county_data))
}
combined_data <- combine_func(EDU01a_data, EDU01a_data)
combined_data[[2]]
str(combined_data[[2]])
# read the data
library(readr)
library(tidyverse)
read_csv_url <- function(url){
print("Read csv")
sheet <- read_csv(url)
data <- as_tibble(sheet)
return(data)
}
convert_long <- function(data, var_name){
print("converted to long")
return(data %>%
rename(area_name = Area_name) %>%
select(c(area_name, STCOU, ends_with("D"))) %>%
pivot_longer(cols = ends_with("D"), values_to = var_name, names_to = "code"))
}
add_year_measurement <- function(new_data){
return(new_data %>% mutate(year = as.numeric(format(as.Date(str_sub(new_data$code, start= -3) %>% str_sub(1, 2), format = "%y"), "%Y")),
measurement = substr(new_data$code, 1, 7)))
print("new variables added")
}
create_state <- function(county_data) {
# county level
county_data$state <- str_sub(county_data$area_name, start = -2)
print("county state created")
#print(county_data)
return(county_data)
}
create_division <- function(non_county_data) {
# non-county level
non_county_data$division <- NA
for (i in 1:nrow(non_county_data)){
if (tolower(non_county_data$area_name[i]) %in% c("connecticut", "maine", "massachusetts", "new hampshire", "rhode island", "Vermont")){
non_county_data$division[i] = "Division 1"
}
else if(tolower(non_county_data$area_name[i]) %in% c("new jersey", "new york", "pennsylvania")){
non_county_data$division[i] = "Division 2"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("illinois", "indiana", "michigan", "ohio", "wisconsin")){
non_county_data$division[i] = "Division 3"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("iowa", "kansas", "minnesota", "missouri", "nebraska", "north dakota", "south dakota")){
non_county_data$division[i] = "Division 4"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("delaware", "florida", "georgia", "maryland", "north carolina", "south carolina", "virginia", "washington d.c.", "west virginia")){
non_county_data$division[i] = "Division 5"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("alabama", "kentucky", "mississippi", "tennessee")){
non_county_data$division[i] = "Division 6"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("arkansas", "louisiana", "oklahoma", "texas")){
non_county_data$division[i] = "Division 7"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("arizona", "colorado", "idaho", "montana", "nevada", "new mexico", "utah", "Wyoming")){
non_county_data$division[i] = "Division 8"
}
else if(tolower(non_county_data$area_name[i]) %in%  c("alaska", "california", "hawaii", "oregon", "washington")){
non_county_data$division[i] = "Division 9"
}
else{
non_county_data$division[i] = "ERROR"
}
}
#print(non_county_data)
return(non_county_data)
}
seggregating_data <- function(new_data){
county_data <- new_data[grep(pattern = ", \\w\\w", new_data$area_name), ]
non_county_data <- new_data[-grep(pattern = ", \\w\\w", new_data$area_name), ]
class(county_data) <- c("county", class(county_data))
county_data <- create_state(county_data)
non_county_data <- create_division(non_county_data)
class(non_county_data) <- c("state", class(non_county_data))
print(county_data)
print(non_county_data)
return(list(county_data, non_county_data))
}
main<- function(url, var_name = "enrollment"){
data = read_csv_url(url)
long_data = convert_long(data, var_name)
new_data = add_year_measurement(long_data)
seggregated_data = seggregating_data(new_data)
return(seggregated_data)
}
url1 <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv"
url2 <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv"
EDU01a_data <- main(url1, var_name = "enrollment")
EDU01a_data <- main(url2, var_name = "enrollment")
combine_func <- function(data1, data2){
combined_county_data = dplyr::bind_rows(data1[[1]], data2[[1]])
combined_non_county_data = dplyr::bind_rows(data1[[2]], data2[[2]])
return(list(combined_county_data, combined_non_county_data))
}
combined_data <- combine_func(EDU01a_data, EDU01a_data)
str(combined_data[[2]])
plot.state <- function(df, var_name = "enrollment"){
new_df = df %>%
group_by(division, year) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE))
ggplot(new_df, aes(x = year, y = mean_val, color = division)) +
geom_line()
}
plot(combined_data[[2]])
combined_data[[1]]
help("order_by")
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row)
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row)
}
group_by(division, year) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE))
ggplot(new_df, aes(x = year, y = mean_val, color = division)) +
geom_line()
}
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row)
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row)
}
}
str(combined_data[[1]])
plot(combined_data[[1]])
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row)
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row)
}
return(new_df)
}
plot(combined_data[[1]])
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
return(new_df)
}
plot(combined_data[[1]])
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
return(new_df)
ggplot(new_df, aes(x = year, y = get(var_name), color = area_name)) +
geom_line()
}
plot(combined_data[[1]])
plot(combined_data[[1]])
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
ggplot(new_df, aes(x = year, y = get(var_name), color = area_name)) +
geom_line()
}
plot(combined_data[[1]])
help(read_csv)
help("select")
help("pivot_longer")
help("grep")
str(combined_data[[1]])
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
ggplot(new_df, aes(x = year, y = get(var_name), color = area_name)) +
geom_line()
}
plot(combined_data[[1]])
new_df = df %>%
filter(state==select_state) %>%
group_by(year, area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
plot.county <- function(df, select_state = "AL", position = "top", count_row = 5, var_name = "enrollment"){
if(tolower(position) == "top") {
new_df = df %>%
filter(state==select_state) %>%
group_by(area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(desc(mean_val)) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
else if(tolower(position )== "bottom") {
new_df = df %>%
filter(state==select_state) %>%
group_by(year, area_name) %>%
summarise(mean_val = mean(get(var_name), na.rm = TRUE)) %>%
arrange(mean_val) %>%
head(count_row) %>%
left_join(df, by = "area_name")
}
ggplot(new_df, aes(x = year, y = get(var_name), color = area_name)) +
geom_line()
}
plot(combined_data[[1]])
help(readr)
help("readr")
library(readr)
library(tidyverse)
help("readr")
install.packages("tidyverse")
help("substr")
help("str_sub")
help("substr")
help("readr")
help("tidyverse")
comb_non)county
comb_non_county
my_wrapper("https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
sheet1 <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv")
sheet_2$Year <- format(as.Date(substr(sheet_2$Enrollment,8,9),format="%y"),"%Y")
sheet1 <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv")
sheet1
sheet_1 <- sheet1%>%select(Area_name,STCOU,ends_with("D"))%>%rename("area_name"=Area_name)
sheet_1
sheet_2 <- sheet_1%>%pivot_longer(cols = 3:12,names_to = "Enrollment",values_to = "Enrollment_Value")
sheet_2
sheet_2$Year <- format(as.Date(substr(sheet_2$Enrollment,8,9),format="%y"),"%Y")
sheet_2$Measurement_Type=substr(sheet_2$Enrollment,1,7)
sheet_3 <- sheet_2
sheet_3
sheet_2$Year <- as.numeric(format(as.Date(substr(sheet_2$Enrollment,8,9),format="%y"),"%Y"))
sheet_2$Measurement_Type=substr(sheet_2$Enrollment,1,7)
sheet_3 <- sheet_2
sheet_3
sheet_2$Year <- format(as.Date(substr(sheet_2$Enrollment,8,9),format="%y"),"%Y")
sheet_2$Measurement_Type=substr(sheet_2$Enrollment,1,7)
sheet_3 <- sheet_2
sheet_3
sheet_2$Year <- as.numeric(format(as.Date(substr(sheet_2$Enrollment,8,9),format="%y"),"%Y"))
sheet_2$Measurement_Type=substr(sheet_2$Enrollment,1,7)
sheet_3 <- sheet_2
sheet_3
sheet_county <- sheet_3[c(grep(pattern = ", \\w\\w", sheet_3$area_name)),]
sheet_county
sheet_non_county <- sheet_3[-c(grep(pattern = ", \\w\\w", sheet_3$area_name)),]
sheet_non_county
class(sheet_county) <- c("county", class(sheet_county))
class(sheet_non_county) <- c("non_county", class(sheet_non_county))
func_1_2 <- function(df, values_to = "Enrollment_Value"){
df_1 <- df%>%select(Area_name,STCOU,ends_with("D"))%>%rename("area_name"=Area_name)
df_2 <- df_1%>%pivot_longer(cols = 3:12,names_to = "Enrollment",values_to = values_to)
return(df_2)
}
func_3 <- function(df_2){
df_2$Year <- as.numeric(format(as.Date(substr(df_2$Enrollment,8,9),format="%y"),"%Y"))
df_2$Measurement_Type=substr(df_2$Enrollment,1,7)
df_3 <- df_2
return(df_3)
}
help(read_table)
library(tidyverse)
help("read_table")
help("as_factor")
help("as_factor")
help(as)
help(as_table)
help(atable)
help(table)
table(data$y, data$spine)
table(data$y, data$spine)
#1.
data <- read_table("crabs.txt", col_names = TRUE) %>%
select(c(color, spine, width, satell, weight, y))
getwd()
setwd("/Users/snehakaranjai/Documents/Sem3/ST558/sneha-k.github.io/Homeworks/HW5")
#1.
data <- read_table("crabs.txt", col_names = TRUE) %>%
select(c(color, spine, width, satell, weight, y))
factor_cols <- c("color", "spine", "y")
data[factor_cols] <- lapply(data[factor_cols], factor)
levels(data$color) <- c("2" = "light",
"3" = "medium",
"4" = "dark",
"5" = "darker")
levels(data$spine) <- c("1" = "Both Good",
"2" = "One Worn/Broken",
"3" = "Both Worn/Broken")
levels(data$y) <- recode(data$y,
"0" = "At least 1 Sattelite",
"1" = "No Sattelite")
data
#2.
table(data$y, data$spine)
#3.
tb <- table(data$color, data$spine, data$y)
tb
knitr::opts_chunk$set(echo = TRUE)
tb[4, ,]
ggplot(data = data, aes(x = color, fill = y)) +
geom_bar(position = position_dodge(), width = 0.85) +
labs(x = "Female Crab Color") +
theme(legend.title = element_blank()) +
coord_flip()
#6.
data %>%
group_by(color, y) %>%
summarise(Avg = mean(weight), Sd = sd(weight), Median = median(weight), IRQ = IQR(weight))
cor(data$weight, data$width)
data %>%
group_by(color, y) %>%
summarise(Avg = mean(weight), Sd = sd(weight), Median = median(weight), IRQ = IQR(weight))
help("position_dodge")
help("facet_wrap")
help("geom_jitter")
help("cor")
# two-way contintency table
table(data$y, data$spine)
